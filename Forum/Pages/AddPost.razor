@using Forum.Data
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@inject AppDbContext _context
@inject NavigationManager NavigationManager
@inject SignInManager<ForumUser> SignInManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject IWebHostEnvironment webHostEnvironment

@page "/article/create-new-post"

<div class="AddPostContainer container">
    <h3>Dodaj Post</h3>
    <hr/>
    <EditForm Model="@postModel" enctype="multipart/form-data" OnValidSubmit="@AddPostToDb">
        <label class="title">
            <h4>Tytuł</h4>
            <InputText class="inputTextArea" @bind-Value="@postModel.Title"/>
        </label>
        <label class="introduction">
            <h4>Krótki opis</h4>
            <InputText class="inputTextArea" @bind-Value="@postModel.Introduction" />
        </label>
        <label class="bodyText">
            <h4>Treść wpisu</h4>
            <InputTextArea class="inputTextArea" @bind-Value="@postModel.BodyText" />
        </label>
        <label class="image">
            <h4>Obraz (maksymalny rozmiar 5MB)</h4>
            <InputFile OnChange="@LoadsFile" multiple></InputFile>
        </label>
        <button type="submit" class="btn btn-primary">Dodaj post</button>
    </EditForm>
    
</div>

@code
{
    public Forum.Data.Post postModel = new Data.Post();
    public ClaimsPrincipal currentUser { get; set; }
    public string UserId { get; set; }
    private List<IBrowserFile> loadedFiles = new();
    private long maxFileSize = 5242880; // 5 MB
    private int maxAllowedFiles = 1;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        

        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        currentUser = authState.User;

        @if (SignInManager.IsSignedIn(currentUser))
        {
            UserId = currentUser.FindFirstValue(ClaimTypes.NameIdentifier);
        }
    }

    private async Task LoadsFile(InputFileChangeEventArgs e)
    {
        loadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                loadedFiles.Add(file);

                var fileExtension = Path.GetExtension(file.Name);

                var trustedFileNameForFileStorage = $"{Path.GetRandomFileName()}{fileExtension}";
                var path = Path.Combine(webHostEnvironment.WebRootPath, "posts\\post-images", trustedFileNameForFileStorage);

                postModel.Image = trustedFileNameForFileStorage;

                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
            }
            catch (Exception ex)
            {
                Console.WriteLine(file.Name, ex.Message);
            }
        }
    }

    public async Task AddPostToDb()
    {
        try
        {
            postModel.ForumUserId = UserId;
            postModel.Created = DateTime.Now;

            _context.Posts.Add(postModel);
            await _context.SaveChangesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        finally
        {
            NavigationManager.NavigateTo("/");
        }
    }
}
